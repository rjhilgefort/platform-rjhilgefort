name: DG Rating Converter - Build and Deploy

env:
  APP_NAME: dg-rating-converter
  STACK_NAME: dg-rating-converter-site
  NOTIFICATION_PREFIX: '[deployment pipeline](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for [DG Rating Converter](https://dgratingconverter.com/)'

on:
  push:
    branches:
      - 'deploy/production'
    paths:
      - 'apps/dg-rating-converter/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: mattermost/action-mattermost-notify@master
        with:
          MATTERMOST_WEBHOOK_URL: ${{ vars.MATTERMOST_WEBHOOK_URL }}
          MATTERMOST_CHANNEL: ${{ vars.MATTERMOST_CHANNEL }}
          TEXT: 'ðŸ”„ ${{ env.NOTIFICATION_PREFIX }} was started...'

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: ./apps/${{ env.APP_NAME }}/Dockerfile
          tags: rjhilgefort/${{ env.APP_NAME }}:latest

      - name: Build Monorepo Packages
        run: |
          npm install
          npm run build

      - name: Deploy to Portainer
        uses: ./packages/portainer-stack-redeploy-action
        with:
          host: '${{ secrets.PORTAINER_URL }}'
          accessToken: '${{ secrets.PORTAINER_ACCESS_TOKEN }}'
          stackName: '${{ env.STACK_NAME }}'

      - uses: mattermost/action-mattermost-notify@master
        with:
          MATTERMOST_WEBHOOK_URL: ${{ vars.MATTERMOST_WEBHOOK_URL }}
          MATTERMOST_CHANNEL: ${{ vars.MATTERMOST_CHANNEL }}
          TEXT: 'âœ… ${{ env.NOTIFICATION_PREFIX }} was completed!'
